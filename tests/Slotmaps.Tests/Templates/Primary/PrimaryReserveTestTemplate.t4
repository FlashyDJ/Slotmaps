<#@ template hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#
    var varName = char.ToLower(slotMapType[0]) + slotMapType.Substring(1);
#>
<#@ include file="..\Header.t4" #>

namespace Slotmaps.Tests.<#= slotMapType #>;

public class Reserve
{
    [Fact]
    public void ValidAdditionalSize_ResizesMap()
    {
        var slotMap = new SlotMap<int>();
        var initialCapacity = slotMap.Capacity;
        var additionalSize = 10;
   
        slotMap.Reserve(additionalSize);
   
        Assert.Equal(initialCapacity + additionalSize, slotMap.Capacity);
    }
   
    [Fact]
    public void Reserve_NegativeAdditionalSize_ThrowsArgumentOutOfRangeException()
    {
        var slotMap = new SlotMap<int>();
        var negativeSize = -10;
   
        Assert.Throws<ArgumentOutOfRangeException>(() => slotMap.Reserve(negativeSize));
    }
}