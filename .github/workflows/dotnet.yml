# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: .NET

on:
  push:
    branches: [main]
    paths:
    - src/**
    - tests/**
    - .github/workflows/dotnet.yml
  pull_request:
    paths:
    - src/**
    - tests/**
    - .github/workflows/dotnet.yml
  workflow_dispatch:

env:
  dotnet_version: 8.x
  ResultsDirectory: ${{github.workspace}}/results
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: false
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.dotnet_version}}

      - name: Install dependencies
        run: dotnet restore

      - name: Build FlashyDJ.Slotmaps
        run: dotnet build src/Slotmaps/Slotmaps.csproj -c ${{matrix.configuration}} --no-restore

  run-tests:
    name: Run XUnit Tests
    needs: build
    runs-on: ubuntu-latest
    outputs:
      pr: ${{steps.pr_number.outputs.pr}}

    strategy:
      matrix:
        configuration: [Debug, Release]

    env:
      META: "(${{matrix.configuration}})-(${{github.run_number}}).trx"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get PR Number
        id: pr_number
        if: ${{github.event_name == 'pull_request'}}
        uses: kkak10//pr-number-action@v1.3

      - name: Set Test File Meta
        run: |
           if ${{github.event_name == 'pull_request'}}
           then
             echo "META=(${{matrix.configuration}})-#${{steps.pr_number.outputs.pr}}(${{github.run_number}}).trx" >> $GITHUB_ENV
           fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.dotnet_version}}

      - name: Install dependencies
        run: dotnet restore

      - name: Test Slotmaps.Tests
        run: >
          dotnet test tests/Slotmaps.Tests/Slotmaps.Tests.csproj 
          -c ${{matrix.configuration}} 
          -l "trx;logfilename=Slotmaps.Tests${{env.META}}.trx" 
          --results-directory ${{env.ResultsDirectory}} 
          --no-restore

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (${{matrix.configuration}})
          retention-days: 2
          path: ${{env.ResultsDirectory}} 

  publish-results:
    needs: run-tests
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write

    strategy:
      matrix:
        configuration: [Debug, Release]

    env:
      TITLE: "Test Results (${{matrix.configuration}}) (${{github.run_number}})"
      META: "(${{matrix.configuration}})-(${{github.run_number}}).trx"
      PASS_TESTS: "0"
      TOTAL_TESTS: "0"

    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{env.ResultsDirectory}}

      - name: Set Test Title
        id: test_title
        run: |
           if ${{github.event_name == 'pull_request'}}
           then
             echo "TITLE=Test Results (${{matrix.configuration}}) for PR #${{needs.run-tests.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
             echo "META=(${{matrix.configuration}})-#${{needs.run-tests.outputs.pr}}(${{github.run_number}}).trx" >> $GITHUB_ENV
           fi

      - name: Publish Test Results (${{matrix.configuration}})
        id: test-results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: "${{env.TITLE}}"
          files: "${{env.ResultsDirectory}}/**/*(${{env.META}}).trx"

      - name: Parse Test Results
        id: parse_test
        shell: pwsh
        run: |
          $CONCLUSION = (Get-Culture).TextInfo.ToTitleCase("${{fromJSON(steps.test-results.outputs.json).conclusion}}")
          $BADGE_COLOR = "696969"
          $PASS_TEST = "${{fromJSON(steps.test-results.outputs.json).formatted.stats.tests_succ}}"
          $TOTAL_TESTS = ${{fromJSON(steps.test-results.outputs.json).formatted.stats.tests}}

          switch ($CONCLUSION) {
            "Success" {
              $BADGE_COLOR = "31c653"
            }
            "Failure" {
              $BADGE_COLOR = "800000"
            }
          }

          echo "CONCLUSION=$CONCLUSION" >> $GITHUB_ENV
          echo "BADGE_COLOR=$BADGE_COLOR" >> $GITHUB_ENV
          echo "PASS_TESTS=$PASS_TEST" >> $GITHUB_ENV
          echo "TOTAL_TESTS=$TOTAL_TESTS"  >> $GITHUB_ENV
          echo "$CONCLUSION ($BADGE_COLOR) - $PASS_TEST / $TOTAL_TESTS"

      - name: Create Test Badge
        # Commented for testing
        # if: >
        #   github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
        #   github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{secrets.GIST_TOKEN}}
          gistID: 4f6ab220575cb9ef573ec7b05d0cc8b4
          filename: test(${{matrix.configuration}}).json
          label: "Test (${{matrix.configuration}}): ${{env.PASS_TESTS}} / ${{env.TOTAL_TESTS}}"
          message: "${{steps.parse_test.outputs.CONCLUSION}}"
          color: "${{steps.parse_test.outputs.BADGE_COLOR}}"

